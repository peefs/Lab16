{"ast":null,"code":"var _jsxFileName = \"/Users/judiel/Lab16/Activity2/frontend/src/components/StudentList.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StudentList = ({\n  students,\n  fetchStudents\n}) => {\n  const deleteStudent = async id => {\n    await axios.delete(`http://localhost:3000/api/students/${id}`);\n    fetchStudents();\n  };\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: students.map(student => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [student.name, \" - \", student.course, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => deleteStudent(student.id),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 21\n      }, this)]\n    }, student.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n};\n_c = StudentList;\nStudentList.propTypes = {\n  students: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    course: PropTypes.string.isRequired\n  })).isRequired,\n  fetchStudents: PropTypes.func.isRequired\n};\nexport default StudentList;\nvar _c;\n$RefreshReg$(_c, \"StudentList\");","map":{"version":3,"names":["React","PropTypes","axios","jsxDEV","_jsxDEV","StudentList","students","fetchStudents","deleteStudent","id","delete","children","map","student","name","course","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","arrayOf","shape","number","isRequired","string","func","$RefreshReg$"],"sources":["/Users/judiel/Lab16/Activity2/frontend/src/components/StudentList.js"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\n\nconst StudentList = ({ students, fetchStudents }) => {\n    const deleteStudent = async (id) => {\n        await axios.delete(`http://localhost:3000/api/students/${id}`);\n        fetchStudents();\n    };\n\n    return (\n        <ul>\n            {students.map(student => (\n                <li key={student.id}>\n                    {student.name} - {student.course}\n                    <button onClick={() => deleteStudent(student.id)}>Delete</button>\n                </li>\n            ))}\n        </ul>\n    );\n};\nStudentList.propTypes = {\n    students: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.number.isRequired,\n            name: PropTypes.string.isRequired,\n            course: PropTypes.string.isRequired,\n        })\n    ).isRequired,\n    fetchStudents: PropTypes.func.isRequired,\n};\n\nexport default StudentList;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAc,CAAC,KAAK;EACjD,MAAMC,aAAa,GAAG,MAAOC,EAAE,IAAK;IAChC,MAAMP,KAAK,CAACQ,MAAM,CAAC,sCAAsCD,EAAE,EAAE,CAAC;IAC9DF,aAAa,CAAC,CAAC;EACnB,CAAC;EAED,oBACIH,OAAA;IAAAO,QAAA,EACKL,QAAQ,CAACM,GAAG,CAACC,OAAO,iBACjBT,OAAA;MAAAO,QAAA,GACKE,OAAO,CAACC,IAAI,EAAC,KAAG,EAACD,OAAO,CAACE,MAAM,eAChCX,OAAA;QAAQY,OAAO,EAAEA,CAAA,KAAMR,aAAa,CAACK,OAAO,CAACJ,EAAE,CAAE;QAAAE,QAAA,EAAC;MAAM;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,GAF5DP,OAAO,CAACJ,EAAE;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGf,CACP;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEb,CAAC;AAACC,EAAA,GAhBIhB,WAAW;AAiBjBA,WAAW,CAACiB,SAAS,GAAG;EACpBhB,QAAQ,EAAEL,SAAS,CAACsB,OAAO,CACvBtB,SAAS,CAACuB,KAAK,CAAC;IACZf,EAAE,EAAER,SAAS,CAACwB,MAAM,CAACC,UAAU;IAC/BZ,IAAI,EAAEb,SAAS,CAAC0B,MAAM,CAACD,UAAU;IACjCX,MAAM,EAAEd,SAAS,CAAC0B,MAAM,CAACD;EAC7B,CAAC,CACL,CAAC,CAACA,UAAU;EACZnB,aAAa,EAAEN,SAAS,CAAC2B,IAAI,CAACF;AAClC,CAAC;AAED,eAAerB,WAAW;AAAC,IAAAgB,EAAA;AAAAQ,YAAA,CAAAR,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}